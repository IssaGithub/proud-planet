---
interface Props {
  product: {
    id: number;
    name: string;
    description: string;
    fullDescription: string;
    price: number;
    originalPrice?: number;
    image: string;
    category: string;
    features: string[];
    color: string;
    specifications: Record<string, string>;
  };
}

const { product } = Astro.props;
---

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
    
    <!-- Product Image -->
    <div class="space-y-4">
      <div class={`aspect-square bg-gradient-to-br from-${product.color}-100 to-${product.color}-200 rounded-2xl relative overflow-hidden`}>
        {product.originalPrice && (
          <div class="absolute top-6 right-6 bg-red-500 text-white px-4 py-2 rounded-full text-sm font-semibold z-10">
            Sale
          </div>
        )}
        <div class={`absolute inset-0 bg-gradient-to-t from-${product.color}-600/20 to-transparent`}></div>
        <div class="absolute inset-0 flex items-center justify-center">
          <div class={`w-48 h-72 bg-gradient-to-b from-${product.color}-700 to-${product.color}-800 rounded-lg shadow-2xl relative`}>
            <div class={`absolute top-6 left-1/2 transform -translate-x-1/2 w-24 h-32 bg-${product.color}-100 rounded-lg flex items-center justify-center`}>
              <span class={`font-playfair text-${product.color}-800 font-bold text-2xl`}>
                {product.image === "classic" ? "OG" : 
                 product.image === "bio" ? "BIO" :
                 product.image === "limited" ? "LTD" :
                 product.image === "familia" ? "FAM" :
                 product.image === "intenso" ? "INT" : "DEL"}
              </span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Thumbnail Images -->
      <div class="grid grid-cols-4 gap-4">
        {[1,2,3,4].map((_, index) => (
          <div class={`aspect-square bg-gradient-to-br from-${product.color}-100 to-${product.color}-200 rounded-lg border-2 border-transparent hover:border-${product.color}-400 cursor-pointer transition-colors duration-200`}>
          </div>
        ))}
      </div>
    </div>

    <!-- Product Info -->
    <div class="space-y-6">
      <div>
        <div class="flex items-center space-x-2 mb-2">
          <span class={`px-3 py-1 bg-${product.color}-100 text-${product.color}-800 rounded-full text-sm font-medium`}>
            {product.category}
          </span>
          <div class="flex items-center space-x-1">
            {[1,2,3,4,5].map((star) => (
              <svg class="w-4 h-4 text-amber-400 fill-current" viewBox="0 0 20 20">
                <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z"/>
              </svg>
            ))}
            <span class="text-stone-500 text-sm ml-2">(47 Bewertungen)</span>
          </div>
        </div>
        
        <h1 class="font-playfair text-3xl md:text-4xl font-bold text-stone-900 mb-4">
          {product.name}
        </h1>
        
        <div class="flex items-baseline space-x-3 mb-6">
          <span class="text-3xl font-bold text-amber-700">€{product.price.toFixed(2)}</span>
          {product.originalPrice && (
            <span class="text-xl text-stone-500 line-through">€{product.originalPrice.toFixed(2)}</span>
          )}
          {product.originalPrice && (
            <span class="bg-red-100 text-red-800 px-2 py-1 rounded text-sm font-semibold">
              -{Math.round((1 - product.price / product.originalPrice) * 100)}%
            </span>
          )}
        </div>
      </div>

      <p class="text-lg text-stone-600 leading-relaxed">
        {product.fullDescription}
      </p>

      <!-- Features -->
      <div>
        <h3 class="font-semibold text-stone-900 mb-3">Eigenschaften</h3>
        <div class="flex flex-wrap gap-2">
          {product.features.map((feature) => (
            <span class="bg-stone-100 text-stone-700 px-3 py-2 rounded-full text-sm font-medium">
              {feature}
            </span>
          ))}
        </div>
      </div>

      <!-- Quantity & Add to Cart -->
      <div class="space-y-4 pt-6 border-t border-stone-200">
        <div class="flex items-center space-x-4">
          <label class="text-stone-700 font-medium">Menge:</label>
          <div class="flex items-center border border-stone-300 rounded-lg">
            <button class="px-3 py-2 text-stone-600 hover:text-stone-900 hover:bg-stone-100 transition-colors duration-200">-</button>
            <input type="number" value="1" min="1" max="10" class="w-16 text-center py-2 border-0 focus:ring-0">
            <button class="px-3 py-2 text-stone-600 hover:text-stone-900 hover:bg-stone-100 transition-colors duration-200">+</button>
          </div>
        </div>
        
        <div class="flex flex-col sm:flex-row gap-4">
          <button class="flex-1 bg-amber-600 text-white py-4 px-8 rounded-full font-semibold text-lg hover:bg-amber-700 transition-colors duration-200 transform hover:scale-105">
            In den Warenkorb
          </button>
          <button class="border-2 border-stone-300 text-stone-700 py-4 px-8 rounded-full font-semibold hover:border-amber-600 hover:text-amber-700 transition-colors duration-200">
            ♡ Merkliste
          </button>
        </div>
      </div>

      <!-- Product Info Tabs -->
      <div class="space-y-6 pt-8">
        <div class="border-b border-stone-200">
          <nav class="flex space-x-8">
            <button class="py-2 border-b-2 border-amber-600 text-amber-700 font-medium">Beschreibung</button>
            <button class="py-2 text-stone-500 hover:text-stone-700 transition-colors duration-200">Spezifikationen</button>
            <button class="py-2 text-stone-500 hover:text-stone-700 transition-colors duration-200">Bewertungen</button>
          </nav>
        </div>
        
        <div class="space-y-4">
          <h4 class="font-semibold text-stone-900">Produktdetails</h4>
          <p class="text-stone-600 leading-relaxed">
            {product.fullDescription}
          </p>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-6">
            {Object.entries(product.specifications).map(([key, value]) => (
              <div class="flex justify-between py-2 border-b border-stone-100">
                <span class="text-stone-600">{key}:</span>
                <span class="font-medium text-stone-900">{value}</span>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</div> 